midpoint=(barplot(sort(expenses),ylim=c(0,1600)))
phone<-80
groceries<-527
transportation<-20
gym<-10
rent<-1500
other<-83
total_expenses<-phone+groceries+transportation+gym+rent+other
total_expenses
semester_expenses=total_expenses*5
semester_expenses
year_expenses=semester_expenses*2
year_expenses
expenses<-c(phone,groceries,transportation,gym,rent,other)
barplot(expenses)
barplot(sort(expenses),
names.arg=c('gym','transportation','phone','other','groceries','rent'))
midpoint=(barplot(sort(expenses),ylim=c(0,1600)))
text(midpoint,sort(expenses)+75,sort(expenses))
phone<-80
groceries<-527
transportation<-20
gym<-10
rent<-1500
other<-83
total_expenses<-phone+groceries+transportation+gym+rent+other
total_expenses
semester_expenses=total_expenses*5
semester_expenses
year_expenses=semester_expenses*2
year_expenses
expenses<-c(phone,groceries,transportation,gym,rent,other)
barplot(expenses)
barplot(sort(expenses),
names.arg=c('gym','transportation','phone','other','groceries','rent'))
midpoint=(barplot(sort(expenses),ylim=c(0,1600)))
text(midpoint,sort(expenses)+75,sort(expenses))
a=3
b=4
c=sqrt(a^2+b^2)
c
n=5
k=2
p=(factorial(n)/factorial(k+1))/factorial(k)
p
choose(n=5,k=2)
#??binomial
dbinom(2,5,0.5,log = FALSE)
dbinom(3,3,1/6,log = FALSE)
dbinom(2,5,0.35,log = FALSE)
pbinom(3, 5, 0.35, lower.tail = FALSE, log.p = FALSE)
#install.packages(c("stringr", "RColorBrewer", "XML"))
library(stringr);library(RColorBrewer);library(XML)
x=2
3*x^2+4*x+8
x <- -3:3
3*x^2+4*x+8
?`XML
?XML
phone<-80
groceries<-527
transportation<-20
gym<-10
rent<-1500
other<-83
total_expenses<-phone+groceries+transportation+gym+rent+other
total_expenses
semester_expenses=total_expenses*5
semester_expenses
year_expenses=semester_expenses*2
year_expenses
expenses<-c(phone,groceries,transportation,gym,rent,other)
phone <- 80
groceries <- 527
transportation <- 20
gym <- 10
rent <- 1500
other <- 83
total_expenses <- phone+groceries+transportation+gym+rent+other
total_expenses
semester_expenses=total_expenses*5
semester_expenses
year_expenses=semester_expenses*2
year_expenses
expenses<-c(phone,groceries,transportation,gym,rent,other)
phone <- 80
groceries <- 527
transportation <- 20
gym <- 10
rent <- 1500
other <- 83
total_expenses <- phone+groceries+transportation+gym+rent+other
total_expenses
semester_expenses <- total_expenses*5
semester_expenses
year_expenses <- semester_expenses*2
year_expenses
expenses <- c(phone,groceries,transportation,gym,rent,other)
barplot(expenses)
barplot(sort(expenses),
names.arg=c('gym','transportation','phone','other','groceries','rent'))
midpoint=(barplot(sort(expenses),ylim=c(0,1600)))
text(midpoint,sort(expenses)+75,sort(expenses))
a=3
b=4
c=sqrt(a^2+b^2)
c
n=5
k=2
p=(factorial(n)/factorial(k+1))/factorial(k)
p
choose(n=5,k=2)
#??binomial
dbinom(2,5,0.5,log = FALSE)
dbinom(3,3,1/6,log = FALSE)
dbinom(2,5,0.35,log = FALSE)
pbinom(3, 5, 0.35, lower.tail = FALSE, log.p = FALSE)
#install.packages(c("stringr", "RColorBrewer", "XML"))
library(stringr);library(RColorBrewer);library(XML)
x=2
3*x^2+4*x+8
x <- -3:3
3*x^2+4*x+8
??XML
??binomial
dbinom(3,10,1/6,log = FALSE)
#??binomial
barplot(sort(expenses),
names.arg = c('gym','transportation','phone','other','groceries','rent'))
barplot(sort(expenses),
names.arg = c('gym', 'transportation', 'phone', 'other', 'groceries', 'rent'))
midpoint=(barplot(sort(expenses), ylim=c(0,1600)))
text(midpoint,sort(expenses)+75, sort(expenses))
a <- 3
b <- 4
c <- sqrt(a^2+b^2)
c
n <- 5
k <- 2
p <- (factorial(n)/factorial(k+1))/factorial(k)
p
choose(n <- 5,k <- 2)
setwd("C:/Users/hsbdf/hw-stat133/hw01")
download.file(url = https://archive.ics.uci.edu/ml/machine-learning-databases/autos/imports-85.data, destfile = 'imports-85.data')
download.file(url = 'https://archive.ics.uci.edu/ml/machine-learning-databases/autos/imports-85.data', destfile = 'imports-85.data')
read.csv('imports-85.data')
read.csv('imports-85.data')
read.csv('imports-85.data')
column_names <- c('symboling', 'normalized_losses', 'make', 'fuel_type', 'aspiration', 'num_of_doors', 'body_style','drive_wheels', 'engine_location', 'wheel_base', 'length', 'width', 'height', 'curb_weight', 'engine_type', 'num_of_cylinders', 'engine_size', 'fuel_system', 'bore', 'stroke', 'compression_ratio', 'horsepower', 'peak_rpm', 'city_mpg', 'highway_mpg', 'price' )
column_names
read.csv(
'imports-85.data',
col.names = column_names,
sep = ","
)
??read.ftable
?read.csv
read.csv(
'imports-85.data',
col.names = column_names,
sep = ",", as.is = !numericAsCharactors)
>?readr
?readr
??readr
download.packages('readr')
download.packages('readr', )
?download.packages()
install.packages('readr')
library('readr')
install.packages('readr')
?readr
??readr
column_names <- c('symboling', 'normalized_losses', 'make', 'fuel_type', 'aspiration', 'num_of_doors', 'body_style','drive_wheels', 'engine_location', 'wheel_base', 'length', 'width', 'height', 'curb_weight', 'engine_type', 'num_of_cylinders', 'engine_size', 'fuel_system', 'bore', 'stroke', 'compression_ratio', 'horsepower', 'peak_rpm', 'city_mpg', 'highway_mpg', 'price' )
column_names
column_types <- c('real', 'real', 'character', 'character', 'character', 'character', 'character', 'character', 'character', 'real', 'real', 'real', 'real', 'integer', 'character', 'character', 'integer', 'character', 'real', 'real', 'real','integer','integer','integer','integer','integer' )
read.csv(
'imports-85.data',
col.names = column_names,
colClasses = column_names
sep = ","
read.csv(
'imports-85.data',
col.names = column_names,
colClasses = column_names,
sep = ","
)
read.csv(
'imports-85.data',
col.names = column_names,
colClasses = column_types,
sep = ","
)
read.csv(
'imports-85.data',
col.names = column_names,
colClasses = column_types,
sep = ",",
na.strings = '?'
)
?read_csv
normal_ read <- read.csv(
normal_read <- read.csv(
'imports-85.data',
col.names = column_names,
colClasses = column_types,
sep = ",",
na.strings = '?'
)
normal_read <- read.csv(
'imports-85.data',
col.names = column_names,
colClasses = column_types,
sep = ",",
na.strings = '?'
)
str(normal_read)
read_csv(readr_read('import-85.data'))
??readr
library('readr')
read_csv(readr_read('import-85.data'))
library('readr')
read_csv(readr_read('import-85.data'))
library('readr')
read_csv(readr_example('import-85.data'))
library('readr')
read_csv('import-85.data')
library('readr')
read_csv('imports-85.data')
library('readr')
readr_read <- read_csv('imports-85.data')
str('readr_read')
library('readr')
readr_read <- read_csv('imports-85.data')
str('readr_read')
readr_read
library('readr')
readr_read <- read_csv('imports-85.data', col.names = column_names,
colClasses = column_types,
sep = ",",
na.strings = '?')
library('readr')
readr_read <- read_csv('imports-85.data', col_integer = column_names,
col_character = column_types,
sep = ",",
na.strings = '?')
?read_csv
library('readr')
readr_read <- read_csv('imports-85.data', col_names = column_names,
col_types = column_types,
sep = ",",
na.strings = '?')
library('readr')
readr_read <- read_csv('imports-85.data', col_names = column_names,
col_types = column_types,
na = c('?', 'NA'))
library('readr')
readr_read <- read_csv('imports-85.data', col_names = column_names,
col_types = column_types,
)
library('readr')
readr_read <- read_csv('imports-85.data' , col_names = column_names,
col_types = column_types)
#col_types = column_types)
readr_read
library('readr')
readr_read <- read_csv('imports-85.data' , col_names = column_names,
col_types = column_types,)
library('readr')
readr_read <- read_csv('imports-85.data' , col_names = column_names,
col_types = column_types, )
library('readr')
readr_read <- read_csv('imports-85.data' , col_names = column_names,
)
str('readr_read')
readr_read
library('readr')
readr_read <- read_csv('imports-85.data' , col_names = column_names)
str('readr_read')
readr_read
library('readr')
readr_read <- read_csv('imports-85.data' , col_names = column_names, col_types = NULL)
str('readr_read')
readr_read
column_names <- c('symboling', 'normalized_losses', 'make', 'fuel_type', 'aspiration', 'num_of_doors', 'body_style','drive_wheels', 'engine_location', 'wheel_base', 'length', 'width', 'height', 'curb_weight', 'engine_type', 'num_of_cylinders', 'engine_size', 'fuel_system', 'bore', 'stroke', 'compression_ratio', 'horsepower', 'peak_rpm', 'city_mpg', 'highway_mpg', 'price' )
column_names
column_types <- c('double', 'double', 'character', 'character', 'character', 'character', 'character', 'character', 'character', 'double', 'double', 'double', 'double', 'integer', 'character', 'character', 'integer', 'character', 'double', 'double', 'double','integer','integer','integer','integer','integer' )
normal_read <- read.csv(
'imports-85.data',
col.names = column_names,
colClasses = column_types,
sep = ",",
na.strings = '?'
)
str(normal_read)
normal_read <- read.csv(
'imports-85.data',
col.names = column_names,
colClasses = column_types,
sep = ",",
na.strings = '?'
)
str(normal_read)
column_types
library('readr')
readr_read <- read_csv('imports-85.data' , col_names = column_names, col_types = cols('d', 'd', 'c', 'c', 'c', 'c', 'c', 'c', 'c', 'd', 'd', 'd', 'd', 'i', 'c', 'c', 'i', 'c', 'd', 'd', 'd', 'i', 'i', 'i', 'i', 'i'))
str('readr_read')
readr_read
library('readr')
readr_read <- read_csv('imports-85.data' , col_names = column_names, col_types = cols('d', 'd', 'c', 'c', 'c', 'c', 'c', 'c', 'c', 'd', 'd', 'd', 'd', 'i', 'c', 'c', 'i', 'c', 'd', 'd', 'd', 'i', 'i', 'i', 'i', 'i'))
str('readr_read')
readr_read
library('readr')
readr_read <- read_csv(normal_read)
library('readr')
readr_read <- read_csv('imports-85.data' , col_names = column_names, col_types = cols('d', 'd', 'c', 'c', 'c', 'c', 'c', 'c', 'c', 'd', 'd', 'd', 'd', 'i', 'c', 'c', 'i', 'c', 'd', 'd', 'd', 'i', 'i', 'i', 'i', 'i'))
str('readr_read')
readr_read
library('readr')
readr_read <- read_csv('imports-85.data' , col_names = column_names, col_types = cols('d', 'd', 'c', 'c', 'c', 'c', 'c', 'c', 'c', 'd', 'd', 'd', 'd', 'i', 'c', 'c', 'i', 'c', 'd', 'd', 'd', 'i', 'i', 'i', 'i', 'i'))
str(readr_read)
readr_read
read.csv('imports-85.data')
normal_read <- read.csv(
'imports-85.data',
col.names = column_names,
colClasses = column_types,
sep = ",",
na.strings = '?'
)
str(normal_read)
normal_read
read.csv('imports-85.data', header = FALSE)
read.csv('imports-85.data', header = FALSE)
read.table('imports-85.data')
read.table('imports-85.data', sep = ',')
matrix(read.table('imports-85.data', sep = ','))
?matrix
as.matrix(read.table('imports-85.data', sep = ','))
?hist
hist('price')
hist(normal_read$price)
read.csv('imports-85.data')
column_names <- c('symboling', 'normalized_losses', 'make', 'fuel_type', 'aspiration', 'num_of_doors', 'body_style','drive_wheels', 'engine_location', 'wheel_base', 'length', 'width', 'height', 'curb_weight', 'engine_type', 'num_of_cylinders', 'engine_size', 'fuel_system', 'bore', 'stroke', 'compression_ratio', 'horsepower', 'peak_rpm', 'city_mpg', 'highway_mpg', 'price' )
column_names
column_types <- c('double', 'double', 'character', 'character', 'character', 'character', 'character', 'character', 'character', 'double', 'double', 'double', 'double', 'integer', 'character', 'character', 'integer', 'character', 'double', 'double', 'double','integer','integer','integer','integer','integer' )
normal_read <- read.csv(
'imports-85.data',
col.names = column_names,
colClasses = column_types,
sep = ",",
na.strings = '?'
)
str(normal_read)
normal_read
library('readr')
readr_read <- read_csv('imports-85.data' , col_names = column_names, col_types = cols('d', 'd', 'c', 'c', 'c', 'c', 'c', 'c', 'c', 'd', 'd', 'd', 'd', 'i', 'c', 'c', 'i', 'c', 'd', 'd', 'd', 'i', 'i', 'i', 'i', 'i'))
str(readr_read)
readr_read
(normal_read[ ,normal_read$price])
data.frame(normal_read[ ,normal_read$price])
normal_read[ ,price]
normal_read[ ,'price']
hist(normal_read[ ,'price'])
hist(normal_read[ ,'price'], col = green)
hist(normal_read[ ,'price'], col = 'green')
hist(normal_read[ ,'price'], col = c('black','green')
hist(normal_read[ ,'price'], col = 'purple')
?boxplot
hist(normal_read[ ,'price'], col = 'purple')
normal_read[ ,'horsepower']
boxplot()
hist(normal_read[ ,'price'], col = 'purple')
normal_read[ ,'horsepower']
boxplot(normal_read[ ,'horsepower'], horizontal =  TRUE)
?barplot
hist(normal_read[ ,'price'], col = 'purple')
order(normal_read[ ,'body_style'], descending = TRUE )
hist(normal_read[ ,'price'], col = 'purple')
order(normal_read$body_style, descending = TRUE)
hist(normal_read[ ,'price'], col = 'purple')
order(normal_read$body_style, decreasing = TRUE)
boxplot(normal_read[ ,'horsepower'], horizontal =  TRUE)
hist(normal_read[ ,'price'], col = 'purple')
order(normal_read$body_style, decreasing = TRUE)
boxplot(normal_read[ ,'horsepower'], horizontal =  TRUE)
barplot(order(normal_read$body_style, decreasing = TRUE))
hist(normal_read[ ,'price'], col = 'purple')
normal_read[order(normal_read$body_style, decreasing = TRUE), ]
boxplot(normal_read[ ,'horsepower'], horizontal =  TRUE)
hist(normal_read[ ,'price'], col = 'purple')
normal_read[order(normal_read$body_style, decreasing = TRUE), "body_style"]
boxplot(normal_read[ ,'horsepower'], horizontal =  TRUE)
?frequency
?group
??group
hist(normal_read[ ,'price'], col = 'purple')
boxplot(normal_read[ ,'horsepower'], horizontal =  TRUE)
group_by(normal_read, 'body_style')
library(dplyr)
hist(normal_read[ ,'price'], col = 'purple')
boxplot(normal_read[ ,'horsepower'], horizontal =  TRUE)
group_by(normal_read, 'body_style')
hist(normal_read[ ,'price'], col = 'purple')
boxplot(normal_read[ ,'horsepower'], horizontal =  TRUE)
group_by(normal_read, body_style)
hist(normal_read[ ,'price'], col = 'purple')
boxplot(normal_read[ ,'horsepower'], horizontal =  TRUE)
group_by(normal_read, body_style)
hist(normal_read[ ,'price'], col = 'purple')
boxplot(normal_read[ ,'horsepower'], horizontal =  TRUE)
group_by(normal_read, normal_read$body_style)
??frequency
?count
hist(normal_read[ ,'price'], col = 'purple')
boxplot(normal_read[ ,'horsepower'], horizontal =  TRUE)
count(normal_read, normal_read$body_style)
hist(normal_read[ ,'price'], col = 'purple')
boxplot(normal_read[ ,'horsepower'], horizontal =  TRUE)
barplot(count(normal_read, normal_read$body_style))
hist(normal_read[ ,'price'], col = 'purple')
boxplot(normal_read[ ,'horsepower'], horizontal =  TRUE)
count(normal_read, normal_read$body_style)
?barplot
hist(normal_read[ ,'price'], col = 'purple')
boxplot(normal_read[ ,'horsepower'], horizontal =  TRUE)
counted_table = count(normal_read, body_style)
barplot(counted_table$n, counted_table$body_style)
hist(normal_read[ ,'price'], col = 'purple')
boxplot(normal_read[ ,'horsepower'], horizontal =  TRUE)
counted_table = count(normal_read, body_style)
barplot(counted_table$n)
hist(normal_read[ ,'price'], col = 'purple')
boxplot(normal_read[ ,'horsepower'], horizontal =  TRUE)
counted_table = count(normal_read, body_style)
sorted_table = sort(counted_table$n, decreasing = TRUE)
sorted_table
hist(normal_read[ ,'price'], col = 'purple')
boxplot(normal_read[ ,'horsepower'], horizontal =  TRUE)
counted_table = count(normal_read, body_style)
sorted_table = counted_table[sort(counted_table$n, decreasing = TRUE), ]
sorted_table
hist(normal_read[ ,'price'], col = 'purple')
boxplot(normal_read[ ,'horsepower'], horizontal =  TRUE)
counted_table = count(normal_read, body_style)
sorted_table = counted_table[order(counted_table$n, decreasing = TRUE), ]
sorted_table
hist(normal_read[ ,'price'], col = 'purple')
boxplot(normal_read[ ,'horsepower'], horizontal =  TRUE)
counted_table = count(normal_read, body_style)
sorted_table = counted_table[order(counted_table$n, decreasing = TRUE), ]
barplot(sorted_table$n, names.arg = sorted_table$body_style)
barplot
?stars
hist(normal_read[ ,'price'], col = 'purple')
boxplot(normal_read[ ,'horsepower'], horizontal =  TRUE)
counted_table = count(normal_read, body_style)
sorted_table = counted_table[order(counted_table$n, decreasing = TRUE), ]
barplot(sorted_table$n, names.arg = sorted_table$body_style)
normal_read[normal_read$aspiration == turbo, c("wheel_base", "length", "width", "height", "price")]
hist(normal_read[ ,'price'], col = 'purple')
boxplot(normal_read[ ,'horsepower'], horizontal =  TRUE)
counted_table = count(normal_read, body_style)
sorted_table = counted_table[order(counted_table$n, decreasing = TRUE), ]
barplot(sorted_table$n, names.arg = sorted_table$body_style)
normal_read[normal_read$aspiration == 'turbo' , c("wheel_base", "length", "width", "height", "price")]
hist(normal_read[ ,'price'], col = 'purple')
boxplot(normal_read[ ,'horsepower'], horizontal =  TRUE)
counted_table = count(normal_read, body_style)
sorted_table = counted_table[order(counted_table$n, decreasing = TRUE), ]
barplot(sorted_table$n, names.arg = sorted_table$body_style)
stars(normal_read[normal_read$aspiration == 'turbo' , c("wheel_base", "length", "width", "height", "price")])
hist(normal_read[ ,'price'], col = 'purple')
boxplot(normal_read[ ,'horsepower'], horizontal =  TRUE)
counted_table = count(normal_read, body_style)
sorted_table = counted_table[order(counted_table$n, decreasing = TRUE), ]
barplot(sorted_table$n, names.arg = sorted_table$body_style)
stars(normal_read[normal_read$aspiration == 'turbo' , c("wheel_base", "length", "width", "height", "price")], labels = c("wheel_base", "length", "width", "height", "price"))
hist(normal_read[ ,'price'], col = 'purple')
boxplot(normal_read[ ,'horsepower'], horizontal =  TRUE)
counted_table = count(normal_read, body_style)
sorted_table = counted_table[order(counted_table$n, decreasing = TRUE), ]
barplot(sorted_table$n, names.arg = sorted_table$body_style)
stars(normal_read[normal_read$aspiration == 'turbo' , c("wheel_base", "length", "width", "height", "price")])
aggregate(normal_read[ ,price], by = list(normal_read$fuel_type), FUN = mean)
aggregate(normal_read[ ,normal_read$price], by = list(normal_read$fuel_type), FUN = mean)
aggregate(normal_read[normal_read$fuel_type == 'gas' ,'price'], by = list(normal_read$fuel_type), FUN = mean)
gas_cars <- normal_read[normal_read$fuel_type == 'gas', ]
aggregate(gas_cars , 'price'], by = list(gas_cars$fuel_type), FUN = mean)
gas_cars <- normal_read[normal_read$fuel_type == 'gas', ]
aggregate(gas_cars , 'price') by = list(gas_cars$fuel_type), FUN = mean)
gas_cars <- normal_read[normal_read$fuel_type == 'gas', ]
aggregate(gas_cars[ , 'price'], by = list(gas_cars$fuel_type), FUN = mean)
gas_cars <- normal_read[normal_read$fuel_type == 'gas', ]
#aggregate(gas_cars[ , 'price'], by = list(gas_cars$fuel_type), FUN = mean)
gas_cars <- normal_read[normal_read$fuel_type == 'gas', ]
gas_cars
#aggregate(gas_cars[ , 'price'], by = list(gas_cars$fuel_type), FUN = mean)
gas_cars <- normal_read[normal_read$fuel_type == 'gas', ]
mean(gas_cars$price)
gas_cars <- normal_read[normal_read$fuel_type == 'gas', ]
mean(gas_cars$price, na.rm = TRUE)
gas_cars <- normal_read[normal_read$fuel_type == 'gas', ]
mean(gas_cars$price, na.rm = TRUE)
diesel_cars <- normal_read[normal_read$fuel_type == 'diesel', ]
mean(diesel_cars$price, na.rm = TRUE)
